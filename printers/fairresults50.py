import matplotlib
matplotlib.use('Agg')
import matplotlib.patches as mpatches
import random
import math
import numpy as np
import matplotlib.pyplot as plt
import itertools
from matplotlib import rcParams
from matplotlib.backends.backend_pdf import PdfPages




#fileName = 'diffrent_set_size'
fileName = '10tasks_u50'
folder = 'final_plot/'
perfault = []

# plot in pdf
pp = PdfPages(folder + fileName + '.pdf')

percentageU = 50
#title = 'Tasks: '+ repr(10) + ', Utilization:'+repr(percentageU)+'%'
title = 'Tasks: '+ repr(10) + ', $U^N_{SUM}$:'+repr(percentageU)+'%'

faultRate = [10**-2., 10**-4, 10**-6.]

#rate106 = [6.95562987163377e-10,4.27262714839123e-16,4.00828856894395e-16,5.69225957924813e-14,8.93967680560669e-12,5.44052944194585e-12,1.49489133638446e-11,6.81912309144770e-18,2.13553603464577e-13,1.28880595646878e-16,1.31413098233208e-17,1.57554022074788e-19,1.28749170282288e-13,0,7.45213888071244e-14,0,2.89843846759331e-14,6.95139735246636e-16,4.53819549477106e-12,5.18929542593778e-14,6.61884508755954e-18,1.50509980648696e-12,1.39304469026445e-23,7.73784816078064e-13,3.55218617879251e-11,1.33065382416667e-11,9.51890139949369e-20,3.89217665274488e-18,5.10308479535895e-12,1.84398563974347e-13,5.80156184276334e-11,0,4.52422252862673e-19,3.09736771988378e-21,5.98251611578034e-22,0,8.03295268898433e-15,3.89416634215867e-12,6.39637480515375e-19,1.48683165103692e-22,4.50980372620582e-21,1.11589717884016e-17,0,9.41569753105109e-17,3.31312687195344e-16,2.46805581755945e-12,1.14961761285839e-16,5.14488382696140e-24,3.77052218626181e-16,1.04438830472776e-12,]
rate106 = [2.17557588797427e-16, 2.82819906514139e-12, 6.64900375585028e-12, 1.46833311580526e-8, 8.17152910620056e-13, 4.95368988344869e-11, 1.72758008409854e-17, 1.52904071127807e-10, 4.15739997660006e-11, 5.59017353633543e-14, 5.75852823091767e-13, 3.98010968701750e-10, 1.24446096140641e-13, 5.54778705216917e-14, 4.01876562545080e-12, 3.42046136623043e-11, 1.25756095906354e-11, 1.00785531679095e-11, 1.22552554985185e-10, 0, 8.05349146128343e-16, 7.01552531541428e-16, 1.46347304478790e-15, 3.38307930985263e-10, 8.17944236868347e-12, 0, 1.22853241144977e-9, 6.31103376971383e-17, 8.63531462535989e-12, 3.02298320447344e-10, 2.50205296099414e-14, 3.95246441356372e-10, 1.88141733713329e-8, 4.61422757140473e-12, 0, 4.02225817931211e-14, 1.34254685299202e-9, 0, 1.21457385719613e-12, 6.65494368494872e-17, 7.21667936886279e-14, 1.23946467527947e-13, 5.37875540241747e-13, 6.56807027404496e-12, 5.61534277114953e-13, 1.99008985687775e-17, 4.74070653046424e-9, 6.40735840452291e-10, 4.20803070370655e-17, 7.70562064066747e-14, 1.01339269344588e-15, 2.53205041963562e-10, 3.10099143377651e-10, 7.66542506286224e-10, 4.76408314343951e-16, 5.33689368060631e-10, 7.62014492543483e-8, 2.44359069382612e-16, 0, 3.71276334247108e-13, 4.50919523474296e-12, 5.77562453119340e-13, 2.75488670813182e-14, 1.59713832019638e-13, 0, 2.58749120867657e-13, 2.08369121490723e-13, 6.40926997574738e-10, 1.45994470659924e-16, 3.21796585334175e-9, 0, 3.08028219979171e-15, 1.87170849310083e-16, 2.24822576536366e-13, 4.90004838743277e-9, 1.24210830278099e-11, 6.36656452931709e-12, 7.23916109736585e-13, 0, 1.46248423084813e-13, 4.53479631994511e-14, 0, 1.78298324287299e-15, 2.21220905690129e-10, 1.19832130834550e-13, 2.67013328425471e-12, 4.52484942916810e-13, 2.65666903557502e-15, 5.75123664339251e-10, 1.12080654532515e-11, 3.47906796266643e-15, 4.59389548926236e-13, 3.23451583783796e-10, 1.41354973122198e-12, 7.27096354662505e-12, 5.33355188085326e-12, 1.16690931188088e-13, 2.43334179454687e-12, 9.36955697554458e-13, 2.82981970673337e-17]
rate107 = [5.69682786848668e-20,6.53927843164903e-20,8.53100305324261e-20,5.18452219438214e-17,2.55212611426345e-14,8.65537273413598e-21,0,5.75568567793322e-20,2.59050550113989e-18,1.76392785351311e-19,1.65802697855609e-22,2.17088902842090e-23,1.67952063524124e-21,7.27237415440951e-21,2.37128584844236e-12,3.27148903195994e-25,1.36827054794738e-11,4.64649453992455e-25,1.26707745872870e-23,5.40629234366367e-21,3.98364751700440e-14,3.66564382656995e-19,1.08648398684453e-18,4.27855013759698e-18,8.79931836256345e-18,2.14852982252864e-26,3.79557561883490e-23,2.54611492494703e-16,2.19391605378452e-15,1.08765094155567e-24,1.47675136691766e-14,1.27304123503241e-24,0,3.88709069051876e-24,3.13124061358606e-21,3.27852994457954e-23,2.57014846743069e-21,4.11840341978822e-25,7.57767577586529e-24,5.45132768031527e-26,6.57594758904271e-25,1.38503387236076e-23,1.13474599941626e-14,5.25497916309612e-22,0,2.15598345978956e-14,5.31600002125978e-24,4.83525543315368e-16,4.79791974201236e-25,6.25522732705149e-20,]
rate108 = [2.51370585519830e-19,5.09285906691868e-17,2.69487657102816e-19,3.38912799434749e-17,3.05662242028015e-23,1.27215633198138e-23,0,1.01780086223907e-27,2.45034213493951e-19,2.05531933096643e-22,0,0,0,0,2.47139756947116e-19,0,1.43173892255927e-25,1.57354628547435e-17,1.97633479795398e-22,7.83956081732685e-21,2.25112831726825e-22,3.51159707563984e-22,5.88229618963396e-22,7.72292564094157e-23,1.30362310863230e-23,1.63885035890729e-22,3.41570199131169e-23,0,1.25216664883916e-24,1.35256501174801e-21,1.06298002248641e-19,3.50967428857289e-21,0,2.36466475029371e-24,0,2.39221521608922e-25,3.11893035136237e-20,7.36895111795845e-24,2.32540076358824e-20,0,4.85096382348375e-20,2.27464819672794e-23,4.89028311358056e-23,2.18568766567825e-24,1.29863365451228e-27,9.14405189327119e-20,4.13456317104766e-23,1.52483920382960e-22,9.72156792042951e-20,8.07937562684565e-24,]
frate106 = []
frate107 = []
frate108 = []
for x in rate106:
    if x != 0:
        frate106.append(x)
for x in rate107:
    if x != 0:
        frate107.append(x)
for x in rate108:
    if x != 0:
        frate108.append(x)

perfault.append(frate106)
perfault.append(frate107)
perfault.append(frate108)

'''
lower_error=[]
upper_error=[]
median = []

for i in range(4):
    median.append(np.median(perfault[i]))
    lower_error.append(min(perfault[i]))
    upper_error.append(max(perfault[i]))
asymmetric_error = (lower_error, upper_error)
print asymmetric_error
'''
#the blue box
boxprops = dict(linewidth=2, color='blue')
#the median line
medianprops = dict(linewidth=2.5, color='red')
whiskerprops = dict(linewidth=2.5, color='black')
capprops = dict(linewidth=2.5)

plt.title(title, fontsize=20)
plt.grid(True)
plt.ylabel('Expected Miss Rate', fontsize=20)
plt.xlabel('Fault Rate $P^A_i$', fontsize=22)
ax = plt.subplot()
ax.set_yscale("log")
ax.set_ylim([10**-28,10**0])
ax.tick_params(axis='both', which='major',labelsize=20)
labels = ('$10^{-2}$','$10^{-4}$', '$10^{-6}$')
try:
    ax.boxplot(perfault, 0, '', labels=labels, boxprops=boxprops, whiskerprops=whiskerprops, capprops=capprops)
except ValueError:
    print "ValueError"
figure = plt.gcf()
figure.set_size_inches([10,6.5])

box = mpatches.Patch(color='blue', label='First to Third Quartiles', linewidth=3)
av = mpatches.Patch(color='red', label='Median', linewidth=3)
whisk = mpatches.Patch(color='black', label='Whiskers', linewidth=3)

plt.legend(handles=[av, box, whisk], fontsize=16, frameon=True, loc=1)

pp.savefig()
plt.clf()
pp.close()

