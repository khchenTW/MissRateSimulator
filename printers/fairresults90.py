import matplotlib
matplotlib.use('Agg')
import matplotlib.patches as mpatches
import random
import math
import numpy as np
import matplotlib.pyplot as plt
import itertools
from matplotlib import rcParams
from matplotlib.backends.backend_pdf import PdfPages




#fileName = 'diffrent_set_size'
fileName = '10tasks_u90'
folder = 'final_plot/'
perfault = []

# plot in pdf
pp = PdfPages(folder + fileName + '.pdf')

percentageU = 90
title = 'Tasks: '+ repr(10) + ', Utilization:'+repr(percentageU)+'%'

faultRate = [10**-2., 10**-4, 10**-6.]

rate106 = [0.896570521947849,0.999508893126165,1.0,1.0,1.0,0.999821029963199,0.586653348574276,0.740707563719945,0.992589877617195,0.997978661580949,1.0,1.0,0.999399666784076,0.991417819592886,0.999861261599025,0.989365252419917,0.998636541526435,0.996364163797162,0.998934654863007,0.989428120589895,0.999540538209322,0.948881792656522,0.968963196200090,0.972668827711556,0.996022622201046,0.965340142594086,0.938811678632411,1.0,0.969459704777027,1.0,0.978631047011802,0.986209624265305,0.992647056805578,0.976553843787167,0.999826594546852,0.997524871566777,0.924293799499806,1.0,0.972328813582552,0.986833620988493,0.996546690058095,0.996275113863568,1.0,0.999340452008862,1.0,0.980558647416431,1.0,0.998434142870827,0.972244199778030,0.991041271049085,]
rate107 = [0.974358941965958,0.911795114832693,0.993896649183113,0.978042622251125,0.949972051402662,0.964756723743986,0.396420802646482,0.358362628665246,0.940630883775063,0.518446543381541,0.984340137620928,0.948989456152797,0.981619734373986,0.956805371055355,0.926193342365768,0.770310026251067,0.862198132121500,1.0,0.926766020582269,0.890425586291669,0.999999447030462,0.939536966662787,0.629375284467529,0.518094330841455,0.943021898463680,0.770051357762268,0.901552545350719,0.0122794866437486,0.900153271230178,0.834150845336497,0.448470479503480,0.833456274837118,0.778303123210294,0.937970823786108,0.846049852320152,0.997325917608220,0.940773242999143,0.624801272358828,0.995841743015875,0.794564337570707,0.659929779031552,0.978119084079776,0.544369110034597,0.961581655165306,0.997579527748551,0.714503104312706,0.982331265256712,0.998119393147250,0.237876911892176,0.574545360070177,]
rate108 = [0.506152975537180,0.820214107371896,0.278729192359565,0.839363902655213,1.0,0.565055312693537,0.885620804177652,0.721428020181539,0.623910059781718,0.947929565484910,0.295408731842572,0.974217924977574,0.753014890451866,0.902448828045387,0.858174022580124,0.552923005945313,0.337401624488249,0.410579169871706,0.553079109478060,0.788437159488035,0.951919844256111,0.994775877299052,0.455780955020993,0.306996193441083,0.998672267378580,1.0,0.680283652653976,0.315158296330369,0.967823762832675,0.937828151623365,0.993006984201260,0.977580818349684,0.940295088932683,0.994894876261645,0.773042166328581,0.898133368569536,0.331080206284386,0.963647232667149,1.0,0.704200641768955,0.952591874301213,0.964183424343073,0.991692467761963,0.179408245903045,0.752640497095137,0.969574703585315,0.311038190440178,0.389117327664164,1.0,0.0728170977775582,]
frate106 = []
frate107 = []
frate108 = []
for x in rate106:
    if x != 0:
        frate106.append(x)
for x in rate107:
    if x != 0:
        frate107.append(x)
for x in rate108:
    if x != 0:
        frate108.append(x)

perfault.append(frate106)
perfault.append(frate107)
perfault.append(frate108)

'''
lower_error=[]
upper_error=[]
median = []

for i in range(4):
    median.append(np.median(perfault[i]))
    lower_error.append(min(perfault[i]))
    upper_error.append(max(perfault[i]))
asymmetric_error = (lower_error, upper_error)
print asymmetric_error
'''
#the blue box
boxprops = dict(linewidth=2, color='blue')
#the median line
medianprops = dict(linewidth=2.5, color='red')
whiskerprops = dict(linewidth=2.5, color='black')
capprops = dict(linewidth=2.5)

plt.title(title, fontsize=20)
plt.grid(True)
plt.ylabel('Expected Miss Rate', fontsize=20)
plt.xlabel('Error rate', fontsize=22)
ax = plt.subplot()
ax.set_yscale("log")
ax.set_ylim([10**-2,10**0])
ax.tick_params(axis='both', which='major',labelsize=20)
labels = ('$10^{-2}$','$10^{-4}$', '$10^{-6}$')
try:
    ax.boxplot(perfault, 0, '', labels=labels, boxprops=boxprops, whiskerprops=whiskerprops, capprops=capprops)
except ValueError:
    print "ValueError"
figure = plt.gcf()
figure.set_size_inches([10,6.5])

box = mpatches.Patch(color='blue', label='First to Third Quartiles', linewidth=3)
av = mpatches.Patch(color='red', label='Median', linewidth=3)
whisk = mpatches.Patch(color='black', label='Whiskers', linewidth=3)

plt.legend(handles=[av, box, whisk], fontsize=12, frameon=True, loc=4)


pp.savefig()
plt.clf()
pp.close()

