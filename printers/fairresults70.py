import matplotlib
matplotlib.use('Agg')
import matplotlib.patches as mpatches
import random
import math
import numpy as np
import matplotlib.pyplot as plt
import itertools
from matplotlib import rcParams
from matplotlib.backends.backend_pdf import PdfPages




#fileName = 'diffrent_set_size'
fileName = '10tasks_u70'
folder = 'final_plot/'
perfault = []

# plot in pdf
pp = PdfPages(folder + fileName + '.pdf')

percentageU = 70
#title = 'Tasks: '+ repr(10) + ', Utilization:'+repr(percentageU)+'%'
title = 'Tasks: '+ repr(10) + ', $U^N_{SUM}$:'+repr(percentageU)+'%'

faultRate = [10**-2., 10**-4, 10**-6.]

rate102 = [0.00222184606643217, 9.39324716686523e-10, 1.49597848095289e-8, 2.82808218593350e-6, 0.000519849044411903, 7.91475444562763e-10, 7.63137213153905e-9, 0.00844286257163001, 4.85236052205006e-5, 2.90563491251103e-8, 1.91460710499306e-5, 3.74261719880609e-9, 0.00713732790552336, 0.000207450616666342, 1.39423096296592e-7, 1.12540466961398e-6, 0.000365215756628136, 0.000610315643742477, 0.0141338447497429, 9.75821568330343e-11, 3.14328179987514e-9, 7.94471258590973e-5, 4.31921903676913e-9, 3.22952584412667e-8, 1.21789332986402e-8, 3.50470600511955e-9, 1.07798151743278e-9, 2.41743004314943e-9, 1.53109752426535e-5, 6.69294805754113e-5, 4.43053428536352e-5, 0.129091977880312, 6.57197834950264e-8, 8.14766361347744e-10, 0.000109200822785597, 8.33601490379021e-7, 1.42511699542707e-8, 0.0259112869376599, 1.97181386727492e-8, 2.66813604969816e-8, 2.56688412663861e-9, 0.000301936621855498, 0.00273439666925762, 5.40020267302603e-8, 1.74936443476837e-8, 1.54602431135751e-6, 0.000568039358057984, 3.19406528700786e-11, 1.15739385850340e-6, 0.00180186413239562, 3.03198334119634e-5, 1.03149500246218e-9, 0.0129149469144891, 0.0143390629520243, 0.00259558019110573, 1.93580791164615e-8, 2.55111987179379e-7, 0.000152258872221307, 5.42604163306919e-5, 2.01483792895990e-5, 0.000684083196343718, 4.16399041462163e-8, 2.13472945543019e-6, 1.53061079443339e-5, 4.28533411016388e-7, 0.00585649086012912, 2.37257895261147e-7, 0.000104624934316751, 3.01003596485980e-5, 2.27653602379746e-9, 6.29822794216893e-5, 1.44875341319109e-8, 3.62678316357252e-6, 7.02911964737374e-5, 5.77516941349414e-6, 0.0611608199907390, 1.42603058812823e-7, 1.22439187597120e-9, 7.37031693326042e-8, 5.66778932028624e-7, 1.51381148642878e-6, 5.87553980690649e-7, 5.56701215028766e-7, 1.98712384192308e-5, 3.02540207700675e-5, 0.000670861064895008, 0.00833562215374853, 0.000995406161983560, 0.0121058396237000, 2.15574010657646e-5, 2.97706259742780e-6, 5.62510432190370e-6, 1.60632355202967e-8, 1.02592081515856e-5, 1.63302734258775e-9, 6.53003207019999e-5, 5.89093970422537e-6, 7.97228025405875e-6, 2.43182208854725e-9, 0.00441120623659347]
rate104 = [2.55922634486244e-9, 4.02511098423670e-7, 0.00239760214429604, 2.92184396061692e-10, 4.68027206076662e-11, 2.77189315369545e-7, 4.03757229254190e-10, 3.79332106423175e-6, 1.99132024417317e-9, 3.72599220833455e-5, 1.66893171485177e-6, 0.000140263086000775, 5.49910920259565e-7, 1.46020776398318e-7, 7.59011058216085e-8, 0.000680440579154460, 9.93208001913125e-7, 3.46311405252067e-10, 1.91213199475381e-6, 7.55088383015764e-8, 1.24781955378994e-6, 1.15370434185976e-5, 6.85316427995476e-10, 1.33744752500981e-8, 2.12136263540692e-6, 0.000166945214883034, 1.13641061115819e-6, 7.01225546690983e-9, 3.33002807838448e-8, 3.74556840722565e-10, 3.71368686833925e-9, 1.47221531580665e-8, 1.14071646669328e-8, 7.51558903780034e-8, 4.25350362325632e-5, 1.23779414960434e-7, 4.52282485426895e-9, 9.55235380921678e-9, 7.60192402213061e-10, 1.35566862267848e-8, 7.20241424474404e-8, 4.52843101819219e-5, 1.15163838038676e-9, 7.24721501414755e-8, 1.76426699014602e-8, 6.62810015386497e-8, 8.52047452974755e-11, 8.44107542687781e-10, 4.26862155165545e-13, 1.13999220453730e-9, 1.32066039353684e-6, 3.47672767934463e-8, 2.26590601126801e-10, 1.19406400021389e-7, 7.43728250508719e-9, 9.26329687702886e-9, 9.99327200558436e-10, 2.82290903681309e-6, 2.89794846966364e-7, 2.61412821277112e-8, 1.61921677166592e-8, 6.50828822701966e-8, 1.82341982305757e-9, 7.86976455864671e-11, 5.95354399895515e-10, 2.01648661895825e-7, 4.17308574139251e-6, 5.02162643942448e-12, 1.97158364139061e-6, 1.05249446361136e-10, 0.00135739377433914, 1.66399209160707e-6, 7.57494023507982e-8, 4.08937697570720e-7, 8.69189465901483e-9, 1.69504869756261e-10, 1.40137426975428e-10, 3.95837466833965e-9, 1.23392998307897e-10, 1.04665988150720e-7, 1.30726987992533e-7, 2.92781349377796e-11, 0.000868803822898168, 0.00257277203529016, 2.07299584107239e-9, 2.63019712043447e-7, 2.80363229738044e-10, 3.87962784285876e-6, 8.36214624379606e-9, 1.95584160695076e-11, 2.49866614732545e-7, 0.000611654233942630, 3.26616021684404e-7, 8.57540892372777e-12, 1.42505813760285e-7, 5.48403240083137e-9, 2.02895691825970e-8, 0.00231019725722616, 8.84974117290134e-11, 1.93458943327190e-7]
rate106 = [8.10246326875006e-8, 3.19572386172112e-9, 3.70214040707043e-7, 2.81485362609499e-9, 2.66235949386522e-9, 8.48893373659518e-9, 0.000251633014266995, 0.000135382856725150, 1.00898330391177e-5, 1.98681838141496e-7, 8.45554235730134e-8, 6.35465746553238e-9, 8.91758800061116e-7, 4.42137419616922e-10, 4.57101772946562e-7, 1.87328885932463e-5, 9.72096057018516e-8, 1.44308567253600e-10, 0.000159427990721121, 0.00130897598013566, 3.67808657193573e-7, 2.97773597334758e-9, 1.33609909282283e-7, 3.96827811355925e-10, 6.97919198165053e-9, 1.18320210195456e-8, 2.16040337962765e-8, 2.08339322122311e-10, 1.98435666604422e-8, 1.42674788399530e-10, 2.07208671508576e-10, 3.62129606893985e-8, 6.04525877332040e-10, 2.35420635231133e-6, 1.05101361047384e-8, 6.03706301598164e-9, 3.53058371018829e-12, 3.41459273578394e-9, 1.53405530923801e-6, 8.61208993386428e-9, 4.86343231386139e-9, 1.91902888494632e-7, 2.69837228723710e-10, 6.84784370482018e-8, 0.000769147005785305, 0.000250265233675757, 1.18203624174800e-7, 4.16933304076519e-10, 1.65326623023707e-11, 2.64428098968946e-7, 4.90666504981627e-11, 2.42137123867731e-8, 4.46923732351041e-8, 4.72588114887817e-11, 1.25224682058919e-7, 1.25886692060796e-5, 4.00180818548924e-8, 8.26883841639840e-9, 1.98476299877318e-11, 1.82068141418345e-9, 7.09273345021130e-9, 8.16940726884649e-11, 5.49826401646357e-10, 4.04186360195653e-5, 4.59721463211207e-7, 6.54987436233689e-11, 4.91919078603306e-8, 1.62387725752927e-9, 1.20516317516089e-9, 2.36968590935437e-9, 7.22480389150433e-10, 6.58666085366840e-7, 1.64611675896198e-8, 4.99008066068288e-12, 1.29465058340227e-7, 2.20179378233447e-6, 1.47427861957454e-8, 3.28139875139643e-12, 3.79133089057844e-11, 6.66624900817902e-7, 5.80694957430743e-11, 2.48210279991865e-7, 6.98262056147752e-9, 1.68626690527661e-10, 3.46041782742860e-8, 7.26467025543694e-5, 6.97675913021538e-8, 4.84110109230271e-9, 6.39669263117586e-7, 1.32584269738637e-8, 3.91429149309245e-11, 1.41625758571705e-9, 3.49283325705739e-9, 7.49032340673913e-10, 7.68595473810612e-12, 6.22348878558919e-10, 7.59810676061588e-9, 1.75195124267886e-10, 1.79458794153281e-7, 9.95413237899837e-10]

frate102 = []
frate104 = []
frate106 = []
for x in rate102:
    if x != 0:
        frate102.append(x)
for x in rate104:
    if x != 0:
        frate104.append(x)
for x in rate106:
    if x != 0:
        frate106.append(x)

perfault.append(frate102)
perfault.append(frate104)
perfault.append(frate106)

'''
lower_error=[]
upper_error=[]
median = []

for i in range(4):
    median.append(np.median(perfault[i]))
    lower_error.append(min(perfault[i]))
    upper_error.append(max(perfault[i]))
asymmetric_error = (lower_error, upper_error)
print(asymmetric_error)
'''
#the blue box
boxprops = dict(linewidth=2, color='blue')
#the median line
medianprops = dict(linewidth=2.5, color='red')
whiskerprops = dict(linewidth=2.5, color='black')
capprops = dict(linewidth=2.5)
plt.title(title, fontsize=20)
plt.grid(True)
plt.ylabel('Expected Miss Rate', fontsize=20)
plt.xlabel('Fault Rate $P^A_i$', fontsize=22)
ax = plt.subplot()
ax.set_yscale("log")
ax.set_ylim([10**-21,10**0])
ax.tick_params(axis='both', which='major',labelsize=20)
labels = ('$10^{-2}$','$10^{-4}$', '$10^{-6}$')
try:
    ax.boxplot(perfault, 0, '', labels=labels, boxprops=boxprops, whiskerprops=whiskerprops, capprops=capprops)
except ValueError:
    print("ValueError")
figure = plt.gcf()
figure.set_size_inches([10,6.5])

box = mpatches.Patch(color='blue', label='First to Third Quartiles', linewidth=3)
av = mpatches.Patch(color='red', label='Median', linewidth=3)
whisk = mpatches.Patch(color='black', label='Whiskers', linewidth=3)

plt.legend(handles=[av, box, whisk], fontsize=16, frameon=True, loc=1)


pp.savefig()
plt.clf()
pp.close()

